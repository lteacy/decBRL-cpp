/**
 * @file exceptions.h
 * Defines types of exceptions that are generated by this library.
 */
#ifndef DECBRL_CPP_EXCEPTIONS_H
#define DECBRL_CPP_EXCEPTIONS_H

#include <exception>
#include <string>

namespace dec_brl
{
    /**
     * Thrown if an error occurs while parsing a protocol buffer object.
     */
    class ProtoException : public std::exception
    {
    private:
        std::string msg_i;
        
    public:
        
        ProtoException(const ProtoException& rhs) throw() : msg_i(rhs.msg_i) {}
    
        ProtoException(std::string msg) throw() : msg_i(msg) {}
        
        ProtoException& operator=(const ProtoException& rhs) throw()
        {
            msg_i = rhs.msg_i;
            return *this;
        }
        
        virtual ~ProtoException() throw() {}
        
        virtual const char* what() const throw()
        {
            return msg_i.c_str();
        }
        
    }; // class ProtoException
        
    /**
     * Thrown if a problem occurs while running an experiment, or with the
     * experimental setup.
     */
    class ExperimentException : public std::exception
    {
    private:
        std::string msg_i;
        
    public:
        
        ExperimentException(const ExperimentException& rhs) throw()
        : msg_i(rhs.msg_i) {}
        
        ExperimentException(std::string msg) throw() : msg_i(msg) {}
        
        ExperimentException& operator=(const ExperimentException& rhs) throw()
        {
            msg_i = rhs.msg_i;
            return *this;
        }
        
        virtual ~ExperimentException() throw() {}
        
        virtual const char* what() const throw()
        {
            return msg_i.c_str();
        }
        
    }; // class ExperimentException
    
} // namespace dec_brl

#endif // DECBRL_CPP_EXCEPTIONS_H
